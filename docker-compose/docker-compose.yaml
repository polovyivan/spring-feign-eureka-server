services:
  customer-app:
    networks:
      - eureka-tutorial-network
    build:
      context: ../spring-customer-app
      no_cache: true
      labels:
        label_name: "eureka-tutorial"
      tags:
        - "spring-customer-app:latest"
    environment:
      customer_app_hostname: customer-app
      eureka_instance_hostname: eureka-server
      app_server_port: 0

  eureka-server:
    ports:
      - "8761:8761"
    networks:
      - eureka-tutorial-network
    build:
      context: ../spring-eureka-server
      no_cache: true
      labels:
        label_name: "eureka-tutorial"
      tags:
        - "spring-eureka-server:latest"
    environment:
      customer_app_hostname: eureka-server

  spring-feign-client:
    ports:
      - "8000:8000"
    networks:
      - eureka-tutorial-network
    build:
      context: ../spring-feign-client
      no_cache: true
      labels:
        label_name: "eureka-tutorial"
      tags:
        - "spring-feign-client:latest"
    environment:
      customer_app_hostname: spring-feign-client
      eureka_instance_hostname: eureka-server

networks:
  eureka-tutorial-network:

#    docker compose up --scale customer-app=3